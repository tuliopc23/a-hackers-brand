{
  "documents": [
    {
      "id": "docs-brand",
      "title": "+page",
      "description": "",
      "url": "/docs/brand",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Brand Guidelines",
          "anchor": "brand-guidelines"
        },
        {
          "level": 2,
          "text": "Brand Identity",
          "anchor": "brand-identity"
        },
        {
          "level": 3,
          "text": "Our Philosophy",
          "anchor": "our-philosophy"
        },
        {
          "level": 4,
          "text": "Sophisticated",
          "anchor": "sophisticated"
        },
        {
          "level": 4,
          "text": "Powerful",
          "anchor": "powerful"
        },
        {
          "level": 4,
          "text": "Innovative",
          "anchor": "innovative"
        },
        {
          "level": 2,
          "text": "Typography",
          "anchor": "typography"
        },
        {
          "level": 3,
          "text": "Font Families",
          "anchor": "font-families"
        },
        {
          "level": 4,
          "text": "PP Supply Mono",
          "anchor": "pp-supply-mono"
        },
        {
          "level": 4,
          "text": "PP Supply Sans",
          "anchor": "pp-supply-sans"
        },
        {
          "level": 3,
          "text": "Type Scale",
          "anchor": "type-scale"
        },
        {
          "level": 3,
          "text": "Typography Rules",
          "anchor": "typography-rules"
        },
        {
          "level": 4,
          "text": "Do's ✓",
          "anchor": "dos-"
        },
        {
          "level": 4,
          "text": "Don'ts ✗",
          "anchor": "donts-"
        },
        {
          "level": 2,
          "text": "Color System",
          "anchor": "color-system"
        },
        {
          "level": 3,
          "text": "Terminal Colors",
          "anchor": "terminal-colors"
        },
        {
          "level": 3,
          "text": "Glass System",
          "anchor": "glass-system"
        },
        {
          "level": 3,
          "text": "Color Usage Guidelines",
          "anchor": "color-usage-guidelines"
        },
        {
          "level": 4,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 2,
          "text": "Spacing & Layout",
          "anchor": "spacing-layout"
        },
        {
          "level": 3,
          "text": "8-Point Grid System",
          "anchor": "8-point-grid-system"
        },
        {
          "level": 3,
          "text": "Layout Principles",
          "anchor": "layout-principles"
        },
        {
          "level": 4,
          "text": "Component Spacing",
          "anchor": "component-spacing"
        },
        {
          "level": 4,
          "text": "Responsive Breakpoints",
          "anchor": "responsive-breakpoints"
        },
        {
          "level": 2,
          "text": "Motion & Animation",
          "anchor": "motion-animation"
        },
        {
          "level": 3,
          "text": "Animation Principles",
          "anchor": "animation-principles"
        },
        {
          "level": 3,
          "text": "Standard Timings",
          "anchor": "standard-timings"
        },
        {
          "level": 2,
          "text": "Voice & Tone",
          "anchor": "voice-tone"
        },
        {
          "level": 3,
          "text": "Brand Voice",
          "anchor": "brand-voice"
        },
        {
          "level": 4,
          "text": "We Are",
          "anchor": "we-are"
        },
        {
          "level": 4,
          "text": "We're Not",
          "anchor": "were-not"
        },
        {
          "level": 4,
          "text": "We Sound Like",
          "anchor": "we-sound-like"
        },
        {
          "level": 3,
          "text": "Writing Examples",
          "anchor": "writing-examples"
        },
        {
          "level": 2,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Quick Start",
          "anchor": "quick-start"
        }
      ],
      "content": "Brand Guidelines The comprehensive guide to the Tulio Brand System — a liquid glass terminal fusion design language that merges Apple's sophisticated glass aesthetics with hacker terminal culture. Brand Identity Our Philosophy The Tulio Brand System represents the intersection of elegance and power. We believe that developer tools should be both beautiful and functional, combining the visual sophistication of modern design with the raw efficiency of terminal interfaces. Sophisticated Clean, refined aesthetics inspired by Apple's design philosophy Powerful Terminal-inspired functionality that developers love Innovative Cutting-edge WebGL effects and liquid animations Typography Font Families Our typography system is built on PP Supply, a modern geometric typeface that perfectly balances technical precision with visual elegance. PP Supply Mono The quick brown fox jumps over the lazy dog Used for: Code, terminal interfaces, technical content, data displays PP Supply Sans The quick brown fox jumps over the lazy dog Used for: Headings, UI elements, marketing content, body text Type Scale Heading 1 - 2.25rem (36px) text-4xl Heading 2 - 1.875rem (30px) text-3xl Heading 3 - 1.5rem (24px) text-2xl Heading 4 - 1.25rem (20px) text-xl Body Large - 1.125rem (18px) text-lg Body Default - 1rem (16px) text-base Body Small - 0.875rem (14px) text-sm Typography Rules Do's ✓ • Use PP Supply Sans for all UI text • Use PP Supply Mono for code and data • Maintain consistent hierarchy • Ensure 4.5:1 contrast ratio minimum • Use proper line heights (1.5 for body) Don'ts ✗ • Don't mix font families in headings • Don't use less than 14px for body text • Don't stretch or compress fonts • Don't use all caps for long text • Don't override system font settings Color System Terminal Colors Our primary palette draws inspiration from classic terminal interfaces and cyberpunk aesthetics. Glass System Our glass morphism effects use carefully calibrated opacity levels for depth and hierarchy. opacity Color Usage Guidelines Accessibility ✓ Always ensure a minimum contrast ratio of 4.5:1 for normal text ✓ Use 3:1 contrast ratio for large text (18pt+ or 14pt+ bold) ✓ Test color combinations with accessibility tools ✓ Provide alternative visual cues beyond color alone Spacing & Layout 8-Point Grid System Our spacing system is based on an 8-point grid, ensuring consistent and harmonious layouts across all interfaces. / Layout Principles Component Spacing • Use 16px (md) for component internal padding • Use 24px (lg) between related components • Use 48px (2xl) between sections • Maintain consistent spacing ratios Responsive Breakpoints • Mobile: 0-639px • Tablet: 640px-1023px • Desktop: 1024px-1279px • Wide: 1280px+ Motion & Animation Animation Principles Motion in the Tulio Brand System should feel liquid, smooth, and purposeful. Every animation serves to enhance the user experience, not distract from it. • Liquid: Animations should flow like water • Responsive: React immediately to user input • Subtle: Enhance, don't overwhelm • Consistent: Use standard timing and easing Standard Timings 150ms Fast Micro-interactions 300ms Normal Most transitions 500ms Slow Page transitions 750ms Slower Complex animations Voice & Tone Brand Voice The Tulio brand speaks with confidence and technical expertise while remaining approachable and human. We're the friend who knows their stuff but never talks down to you. We Are • Technical but clear • Confident but humble • Modern but timeless • Helpful but concise We're Not • Jargon-heavy • Arrogant • Trendy • Verbose We Sound Like • A skilled mentor • A trusted colleague • A passionate creator • A problem solver Writing Examples ❌ Don't say: \"An error has occurred in the system. Please contact the administrator.\" ✓ Do say: \"Something went wrong. Try refreshing, or let us know if it persists.\" Implementation Quick Start To use the Tulio Brand System in your project:",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.828Z"
    },
    {
      "id": "docs-colors",
      "title": "+page",
      "description": "",
      "url": "/docs/colors",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Color System",
          "anchor": "color-system"
        },
        {
          "level": 2,
          "text": "Color Philosophy",
          "anchor": "color-philosophy"
        },
        {
          "level": 3,
          "text": "Terminal Heritage",
          "anchor": "terminal-heritage"
        },
        {
          "level": 3,
          "text": "Glass Clarity",
          "anchor": "glass-clarity"
        },
        {
          "level": 3,
          "text": "Neon Accents",
          "anchor": "neon-accents"
        },
        {
          "level": 2,
          "text": "Terminal Palette",
          "anchor": "terminal-palette"
        },
        {
          "level": 2,
          "text": "Glass System",
          "anchor": "glass-system"
        },
        {
          "level": 3,
          "text": "Glass Effect Implementation",
          "anchor": "glass-effect-implementation"
        },
        {
          "level": 2,
          "text": "Gradients",
          "anchor": "gradients"
        },
        {
          "level": 2,
          "text": "Semantic Colors",
          "anchor": "semantic-colors"
        },
        {
          "level": 2,
          "text": "Background System",
          "anchor": "background-system"
        },
        {
          "level": 3,
          "text": "Background",
          "anchor": "background"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Contrast Requirements",
          "anchor": "contrast-requirements"
        },
        {
          "level": 3,
          "text": "Testing Tools",
          "anchor": "testing-tools"
        },
        {
          "level": 3,
          "text": "Example Combinations",
          "anchor": "example-combinations"
        },
        {
          "level": 2,
          "text": "Color Usage Guidelines",
          "anchor": "color-usage-guidelines"
        },
        {
          "level": 3,
          "text": "Do's ✓",
          "anchor": "dos-"
        },
        {
          "level": 3,
          "text": "Don'ts ✗",
          "anchor": "donts-"
        },
        {
          "level": 2,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Using Design Tokens",
          "anchor": "using-design-tokens"
        },
        {
          "level": 3,
          "text": "Tailwind Classes",
          "anchor": "tailwind-classes"
        }
      ],
      "content": "Color System Our color system combines cyberpunk terminal aesthetics with modern glass morphism, creating a unique visual language that's both futuristic and functional. Color Philosophy The Tulio color system is inspired by classic terminal interfaces, cyberpunk aesthetics, and modern glass design. Each color serves a specific purpose and creates a cohesive visual hierarchy. Terminal Heritage Classic phosphor greens meet modern neons Glass Clarity Translucent layers create depth Neon Accents Bold colors for emphasis and delight Terminal Palette Our primary palette draws from classic terminal phosphors and cyberpunk neons, each color carefully chosen for optimal contrast and visual impact. brandColors.terminal. Glass System Our glass morphism system uses carefully calibrated opacity levels to create depth and hierarchy while maintaining readability. opacity Glass Effect Implementation Gradients Dynamic gradients add energy and movement to the interface, reinforcing the liquid terminal aesthetic. brandColors.gradients. Semantic Colors Consistent semantic colors help users understand system states and actions at a glance. Background System Our background colors create depth and hierarchy while maintaining the dark, sophisticated aesthetic. Background brandColors.background. Accessibility All color combinations meet WCAG AA standards for contrast ratios, ensuring readability for all users. Contrast Requirements ✓ Normal text: 4.5:1 minimum ✓ Large text: 3:1 minimum ✓ UI components: 3:1 minimum Testing Tools • WebAIM Contrast Checker • Chrome DevTools Accessibility • Stark Figma Plugin • Polypane Browser Example Combinations Terminal Green on Primary Background 8.5:1 ✓ Electric Cyan on Secondary Background 9.2:1 ✓ Neon Orange on Tertiary Background 5.8:1 ✓ Color Usage Guidelines Do's ✓ ✓ Use terminal colors for interactive elements and emphasis ✓ Apply glass effects to create depth and hierarchy ✓ Test color combinations for accessibility ✓ Use semantic colors consistently ✓ Apply gradients sparingly for impact Don'ts ✗ ✗ Mix too many bright colors in one view ✗ Use pure white on dark backgrounds ✗ Apply glass effects to text ✗ Use color as the only indicator ✗ Override semantic color meanings Implementation Using Design Tokens Tailwind Classes Success message Glass container Gradient element `} language=\"html\" />",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.828Z"
    },
    {
      "id": "docs-spacing",
      "title": "+page",
      "description": "",
      "url": "/docs/spacing",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Spacing & Layout",
          "anchor": "spacing-layout"
        },
        {
          "level": 2,
          "text": "Spacing Philosophy",
          "anchor": "spacing-philosophy"
        },
        {
          "level": 3,
          "text": "8-Point Grid",
          "anchor": "8-point-grid"
        },
        {
          "level": 3,
          "text": "Proportional",
          "anchor": "proportional"
        },
        {
          "level": 3,
          "text": "Responsive",
          "anchor": "responsive"
        },
        {
          "level": 2,
          "text": "Spacing Scale",
          "anchor": "spacing-scale"
        },
        {
          "level": 2,
          "text": "Layout Grid System",
          "anchor": "layout-grid-system"
        },
        {
          "level": 3,
          "text": "Grid Columns",
          "anchor": "grid-columns"
        },
        {
          "level": 4,
          "text": "Column",
          "anchor": "column"
        },
        {
          "level": 2,
          "text": "Responsive Breakpoints",
          "anchor": "responsive-breakpoints"
        },
        {
          "level": 3,
          "text": "Breakpoint Usage",
          "anchor": "breakpoint-usage"
        },
        {
          "level": 2,
          "text": "Component Spacing Patterns",
          "anchor": "component-spacing-patterns"
        },
        {
          "level": 2,
          "text": "Layout Principles",
          "anchor": "layout-principles"
        },
        {
          "level": 3,
          "text": "Do's ✓",
          "anchor": "dos-"
        },
        {
          "level": 3,
          "text": "Don'ts ✗",
          "anchor": "donts-"
        },
        {
          "level": 2,
          "text": "Container Layouts",
          "anchor": "container-layouts"
        },
        {
          "level": 3,
          "text": "Standard Containers",
          "anchor": "standard-containers"
        },
        {
          "level": 3,
          "text": "Responsive Container Example",
          "anchor": "responsive-container-example"
        },
        {
          "level": 2,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Using Design Tokens",
          "anchor": "using-design-tokens"
        },
        {
          "level": 3,
          "text": "Tailwind Classes",
          "anchor": "tailwind-classes"
        },
        {
          "level": 2,
          "text": "Section Title",
          "anchor": "section-title"
        }
      ],
      "content": "Spacing & Layout Our spacing system is built on an 8-point grid that ensures consistent, harmonious layouts across all interfaces while maintaining the liquid glass aesthetic. Spacing Philosophy The Tulio spacing system creates rhythm and hierarchy through careful use of whitespace. Every measurement is based on multiples of 8px, creating a mathematical harmony that feels both technical and organic. 8 8-Point Grid Mathematical foundation for all spacing ≈ Proportional Consistent ratios across all components ⚡ Responsive Adapts fluidly across all screen sizes Spacing Scale Our spacing scale provides a comprehensive range of sizes for all layout needs, from micro-spacing to major page sections. / Layout Grid System Our responsive grid system adapts from single-column mobile layouts to complex multi-column desktop interfaces while maintaining visual harmony. Grid Columns Column grid-cols- Responsive Breakpoints Our breakpoint system ensures optimal layouts across all device sizes, from mobile phones to ultra-wide monitors. Min Width Max Width Container Breakpoint Usage Responsive padding `} language=\"css\" /> Component Spacing Patterns Standard spacing patterns for common components ensure consistency across the design system. Internal Padding: External Margin: Layout Principles Do's ✓ ✓ Use consistent spacing ratios throughout your layout ✓ Maintain the 8-point grid system for all measurements ✓ Test layouts across all breakpoints ✓ Use whitespace to create visual hierarchy ✓ Group related elements with consistent spacing ✓ Follow responsive-first design principles Don'ts ✗ ✗ Use arbitrary spacing values outside the scale ✗ Create inconsistent gaps between similar elements ✗ Forget to test mobile layouts thoroughly ✗ Overcrowd interfaces with insufficient spacing ✗ Use fixed pixel values instead of responsive units ✗ Break the grid system for one-off solutions Container Layouts Standard Containers Responsive Container Example Card 1 Card 2 Card 3 `} language=\"html\" /> Implementation Using Design Tokens Tailwind Classes Content with responsive spacing Responsive container content Section Title Multiple content blocks with consistent spacing `} language=\"html\" />",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.843Z"
    },
    {
      "id": "docs-typography",
      "title": "+page",
      "description": "",
      "url": "/docs/typography",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Typography",
          "anchor": "typography"
        },
        {
          "level": 2,
          "text": "Font Families",
          "anchor": "font-families"
        },
        {
          "level": 3,
          "text": "PP Supply Sans",
          "anchor": "pp-supply-sans"
        },
        {
          "level": 4,
          "text": "Weights Available",
          "anchor": "weights-available"
        },
        {
          "level": 4,
          "text": "Best Used For",
          "anchor": "best-used-for"
        },
        {
          "level": 3,
          "text": "PP Supply Mono",
          "anchor": "pp-supply-mono"
        },
        {
          "level": 4,
          "text": "Weights Available",
          "anchor": "weights-available"
        },
        {
          "level": 4,
          "text": "Best Used For",
          "anchor": "best-used-for"
        },
        {
          "level": 2,
          "text": "Type Scale",
          "anchor": "type-scale"
        },
        {
          "level": 2,
          "text": "Font Pairing",
          "anchor": "font-pairing"
        },
        {
          "level": 2,
          "text": "Line Height",
          "anchor": "line-height"
        },
        {
          "level": 3,
          "text": "Tight (1.25)",
          "anchor": "tight-125"
        },
        {
          "level": 3,
          "text": "Normal (1.5)",
          "anchor": "normal-15"
        },
        {
          "level": 3,
          "text": "Relaxed (1.75)",
          "anchor": "relaxed-175"
        },
        {
          "level": 2,
          "text": "Typography Guidelines",
          "anchor": "typography-guidelines"
        },
        {
          "level": 3,
          "text": "Best Practices ✓",
          "anchor": "best-practices-"
        },
        {
          "level": 3,
          "text": "Common Mistakes ✗",
          "anchor": "common-mistakes-"
        },
        {
          "level": 2,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "CSS Variables",
          "anchor": "css-variables"
        },
        {
          "level": 3,
          "text": "Tailwind Classes",
          "anchor": "tailwind-classes"
        },
        {
          "level": 1,
          "text": "Welcome to Tulio",
          "anchor": "welcome-to-tulio"
        }
      ],
      "content": "Typography Typography is the foundation of our design language. The PP Supply font family provides the perfect balance of technical precision and visual elegance. Font Families PP Supply Sans Primary typeface for UI and marketing Download Font Weights Available Regular (400) font-normal Medium (500) font-medium Semibold (600) font-semibold Bold (700) font-bold Best Used For • Headlines and titles • Body text • UI components • Marketing materials • Documentation PP Supply Mono Monospace for code and terminal interfaces Download Font Weights Available Regular (400) font-normal Medium (500) font-medium Bold (700) font-bold Best Used For • Code blocks • Terminal interfaces • Data displays • Technical documentation • System messages Type Scale Our type scale follows a harmonious progression, ensuring clear hierarchy and readability across all screen sizes. Display Large text-5xl 3rem / 48px • Line height: 1 Display text-4xl 2.25rem / 36px • Line height: 1.25 Heading 1 text-3xl 1.875rem / 30px • Line height: 1.25 Heading 2 text-2xl 1.5rem / 24px • Line height: 1.5 Heading 3 text-xl 1.25rem / 20px • Line height: 1.5 Heading 4 text-lg 1.125rem / 18px • Line height: 1.5 Body text-base 1rem / 16px • Line height: 1.5 Small text-sm 0.875rem / 14px • Line height: 1.5 Extra Small text-xs 0.75rem / 12px • Line height: 1.5 Font Pairing Effective font pairing creates visual interest and hierarchy. Here are recommended combinations for different contexts. • • Beautiful Terminal Interfaces • • Line Height Proper line height ensures readability and visual comfort across different text sizes and contexts. Tight (1.25) leading-tight Normal (1.5) leading-normal Relaxed (1.75) leading-relaxed Typography Guidelines Best Practices ✓ ✓ Use PP Supply Sans for all UI text and headings ✓ Reserve PP Supply Mono for code, data, and terminal interfaces ✓ Maintain consistent type scales across similar elements ✓ Use proper semantic HTML tags (h1-h6, p, etc.) ✓ Ensure minimum 16px font size for body text ✓ Test readability on different screen sizes Common Mistakes ✗ ✗ Mixing too many font sizes in one section ✗ Using all caps for long passages of text ✗ Insufficient contrast between text and background ✗ Line lengths exceeding 75 characters ✗ Using system fonts as fallbacks without testing ✗ Ignoring responsive typography needs Implementation CSS Variables Tailwind Classes Welcome to Tulio Build beautiful terminal-inspired interfaces npm install tulio-brand-system `} language=\"html\" />",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.844Z"
    },
    {
      "id": "docs-accessibility",
      "title": "Accessibility Guidelines - Liquid Glass Terminal Fusion",
      "description": "Comprehensive accessibility guidelines, testing tools, and inclusive design principles for the liquid glass terminal fusion design system.",
      "url": "/docs/accessibility",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Accessibility Guidelines",
          "anchor": "accessibility-guidelines"
        },
        {
          "level": 3,
          "text": "WCAG Compliance Levels",
          "anchor": "wcag-compliance-levels"
        },
        {
          "level": 5,
          "text": "Key Requirements:",
          "anchor": "key-requirements"
        },
        {
          "level": 3,
          "text": "Our Accessibility Commitment",
          "anchor": "our-accessibility-commitment"
        },
        {
          "level": 4,
          "text": "✓ What We Provide",
          "anchor": "-what-we-provide"
        },
        {
          "level": 4,
          "text": "🎯 Testing Coverage",
          "anchor": "-testing-coverage"
        },
        {
          "level": 3,
          "text": "Color Contrast Testing",
          "anchor": "color-contrast-testing"
        },
        {
          "level": 3,
          "text": "Contrast Requirements",
          "anchor": "contrast-requirements"
        },
        {
          "level": 3,
          "text": "Motion Preferences",
          "anchor": "motion-preferences"
        },
        {
          "level": 4,
          "text": "Test Your Motion Preference",
          "anchor": "test-your-motion-preference"
        },
        {
          "level": 3,
          "text": "Implementation Examples",
          "anchor": "implementation-examples"
        },
        {
          "level": 4,
          "text": "CSS Media Query",
          "anchor": "css-media-query"
        },
        {
          "level": 4,
          "text": "JavaScript Detection",
          "anchor": "javascript-detection"
        },
        {
          "level": 3,
          "text": "Keyboard Navigation Patterns",
          "anchor": "keyboard-navigation-patterns"
        },
        {
          "level": 3,
          "text": "Focus Management",
          "anchor": "focus-management"
        },
        {
          "level": 4,
          "text": "Focus Indicators",
          "anchor": "focus-indicators"
        },
        {
          "level": 4,
          "text": "Focus CSS Implementation",
          "anchor": "focus-css-implementation"
        },
        {
          "level": 3,
          "text": "ARIA Implementation Examples",
          "anchor": "aria-implementation-examples"
        },
        {
          "level": 4,
          "text": "Interactive Elements",
          "anchor": "interactive-elements"
        },
        {
          "level": 4,
          "text": "Dynamic Content",
          "anchor": "dynamic-content"
        },
        {
          "level": 3,
          "text": "Accessibility Testing Tools",
          "anchor": "accessibility-testing-tools"
        },
        {
          "level": 3,
          "text": "Accessibility Testing Checklist",
          "anchor": "accessibility-testing-checklist"
        },
        {
          "level": 4,
          "text": "Automated Testing",
          "anchor": "automated-testing"
        },
        {
          "level": 4,
          "text": "Manual Testing",
          "anchor": "manual-testing"
        },
        {
          "level": 3,
          "text": "CI/CD Integration",
          "anchor": "cicd-integration"
        },
        {
          "level": 4,
          "text": "GitHub Actions Workflow",
          "anchor": "github-actions-workflow"
        }
      ],
      "content": "A Hacker's Brand Accessibility Guidelines Accessibility Guidelines Building inclusive experiences that work for everyone, everywhere. (selectedSection = key)} data-magnetic > WCAG Compliance Levels Key Requirements: • Our Accessibility Commitment ✓ What We Provide • WCAG 2.1 AA compliance by default • Automatic reduced motion support • Semantic HTML structure • Keyboard navigation support • Screen reader compatibility • High contrast color combinations 🎯 Testing Coverage • Automated accessibility testing in CI/CD • Manual screen reader testing • Keyboard-only navigation validation • Color contrast ratio verification • User testing with disabled users • Mobile accessibility validation Color Contrast Testing Ratio: Sample Text FG: BG: Contrast Requirements 4.5:1 Normal Text Regular text under 18pt or 14pt bold 3:1 Large Text Text 18pt+ or 14pt+ bold 3:1 UI Components Buttons, form controls, focus indicators Motion Preferences Implementation: Test Your Motion Preference Check Motion Setting Current setting: Implementation Examples CSS Media Query JavaScript Detection else });`} language=\"javascript\" /> Keyboard Navigation Patterns Keys: Behavior: Focus: Focus Management Focus Indicators Visible Focus Ring Background Change Border + Shadow Focus CSS Implementation ARIA Implementation Examples Interactive Elements ... Menu ... Password Must be at least 8 characters `} language=\"html\" /> Dynamic Content Status: Form submitted successfully 32% complete Click to sort by name `} language=\"html\" /> Accessibility Testing Tools Features: • → Accessibility Testing Checklist Automated Testing Run axe-core accessibility tests Validate HTML semantics Check color contrast ratios Test with Lighthouse audit Validate ARIA attributes Manual Testing Navigate using only keyboard Test with screen reader Verify reduced motion support Test at 200% zoom level Validate mobile accessibility CI/CD Integration GitHub Actions Workflow Building inclusive experiences that work for everyone",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.827Z"
    },
    {
      "id": "docs-components-accordion",
      "title": "Accordion Component",
      "description": "Collapsible content sections with smooth animations and keyboard support.",
      "url": "/docs/components/accordion",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Accordion",
          "anchor": "accordion"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Accordion v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.828Z"
    },
    {
      "id": "docs-components-advancedliquidterminal",
      "title": "AdvancedLiquidTerminal Component",
      "description": "AdvancedLiquidTerminal component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/advancedliquidterminal",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "AdvancedLiquidTerminal",
          "anchor": "advancedliquidterminal"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "AdvancedLiquidTerminal v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.829Z"
    },
    {
      "id": "docs-components-advancedterminal",
      "title": "AdvancedTerminal Component",
      "description": "AdvancedTerminal component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/advancedterminal",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "AdvancedTerminal",
          "anchor": "advancedterminal"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "AdvancedTerminal v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.829Z"
    },
    {
      "id": "docs-components-aicommandsuggestions",
      "title": "AICommandSuggestions Component",
      "description": "AICommandSuggestions component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/aicommandsuggestions",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "AICommandSuggestions",
          "anchor": "aicommandsuggestions"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "AICommandSuggestions v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.829Z"
    },
    {
      "id": "docs-components-alert",
      "title": "Alert Component",
      "description": "Alert messages with various severity levels and terminal aesthetics.",
      "url": "/docs/components/alert",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Alert",
          "anchor": "alert"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Alert v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.829Z"
    },
    {
      "id": "docs-components-asyncerrorboundary",
      "title": "AsyncErrorBoundary Component",
      "description": "AsyncErrorBoundary component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/asyncerrorboundary",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "AsyncErrorBoundary",
          "anchor": "asyncerrorboundary"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "AsyncErrorBoundary v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.830Z"
    },
    {
      "id": "docs-components-badge",
      "title": "Badge Component",
      "description": "Status indicators and labels with terminal-inspired styling and variants.",
      "url": "/docs/components/badge",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Badge",
          "anchor": "badge"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Badge v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.830Z"
    },
    {
      "id": "docs-components-bootsequence",
      "title": "BootSequence Component",
      "description": "BootSequence component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/bootsequence",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "BootSequence",
          "anchor": "bootsequence"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "BootSequence v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.830Z"
    },
    {
      "id": "docs-guidelines",
      "title": "Brand Guidelines - Liquid Glass Terminal Fusion",
      "description": "Comprehensive brand guidelines for the liquid glass terminal fusion design system including philosophy, usage rules, and implementation guidelines.",
      "url": "/docs/guidelines",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Brand Guidelines",
          "anchor": "brand-guidelines"
        },
        {
          "level": 3,
          "text": "Core Principles",
          "anchor": "core-principles"
        },
        {
          "level": 3,
          "text": "Brand Equation",
          "anchor": "brand-equation"
        },
        {
          "level": 3,
          "text": "Brand Personality",
          "anchor": "brand-personality"
        },
        {
          "level": 3,
          "text": "Voice & Tone",
          "anchor": "voice-tone"
        },
        {
          "level": 4,
          "text": "Tone",
          "anchor": "tone"
        },
        {
          "level": 4,
          "text": "Voice",
          "anchor": "voice"
        },
        {
          "level": 4,
          "text": "Emotion",
          "anchor": "emotion"
        },
        {
          "level": 3,
          "text": "Primary Typeface: PP Supply Sans",
          "anchor": "primary-typeface-pp-supply-sans"
        },
        {
          "level": 4,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Characteristics",
          "anchor": "characteristics"
        },
        {
          "level": 3,
          "text": "Secondary Typeface: PP Supply Mono",
          "anchor": "secondary-typeface-pp-supply-mono"
        },
        {
          "level": 4,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Characteristics",
          "anchor": "characteristics"
        },
        {
          "level": 3,
          "text": "Color Usage Rules",
          "anchor": "color-usage-rules"
        },
        {
          "level": 4,
          "text": "Primary Blue (#007aff)",
          "anchor": "primary-blue-007aff"
        },
        {
          "level": 4,
          "text": "Terminal Green (#30d158)",
          "anchor": "terminal-green-30d158"
        },
        {
          "level": 3,
          "text": "Accessibility Requirements",
          "anchor": "accessibility-requirements"
        },
        {
          "level": 3,
          "text": "Glass Effect Guidelines",
          "anchor": "glass-effect-guidelines"
        },
        {
          "level": 4,
          "text": "✅ Do",
          "anchor": "-do"
        },
        {
          "level": 4,
          "text": "❌ Don't",
          "anchor": "-dont"
        },
        {
          "level": 3,
          "text": "Glass Intensity Levels",
          "anchor": "glass-intensity-levels"
        },
        {
          "level": 3,
          "text": "Motion Principles",
          "anchor": "motion-principles"
        },
        {
          "level": 4,
          "text": "Fluid & Natural",
          "anchor": "fluid-natural"
        },
        {
          "level": 4,
          "text": "Purposeful",
          "anchor": "purposeful"
        },
        {
          "level": 4,
          "text": "Subtle",
          "anchor": "subtle"
        },
        {
          "level": 4,
          "text": "Responsive",
          "anchor": "responsive"
        },
        {
          "level": 3,
          "text": "Signature Effects",
          "anchor": "signature-effects"
        },
        {
          "level": 4,
          "text": "Magnetic Hover",
          "anchor": "magnetic-hover"
        },
        {
          "level": 4,
          "text": "Glass Ripple",
          "anchor": "glass-ripple"
        },
        {
          "level": 3,
          "text": "Do's and Don'ts",
          "anchor": "dos-and-donts"
        },
        {
          "level": 4,
          "text": "✅ Do",
          "anchor": "-do"
        },
        {
          "level": 4,
          "text": "❌ Don't",
          "anchor": "-dont"
        },
        {
          "level": 3,
          "text": "Usage Examples",
          "anchor": "usage-examples"
        },
        {
          "level": 5,
          "text": "✅ Correct",
          "anchor": "-correct"
        },
        {
          "level": 5,
          "text": "❌ Incorrect",
          "anchor": "-incorrect"
        },
        {
          "level": 3,
          "text": "Accessibility Standards",
          "anchor": "accessibility-standards"
        },
        {
          "level": 4,
          "text": "Color Contrast",
          "anchor": "color-contrast"
        },
        {
          "level": 4,
          "text": "Motion & Animation",
          "anchor": "motion-animation"
        },
        {
          "level": 3,
          "text": "Implementation Guidelines",
          "anchor": "implementation-guidelines"
        },
        {
          "level": 4,
          "text": "Reduced Motion",
          "anchor": "reduced-motion"
        },
        {
          "level": 4,
          "text": "Focus Management",
          "anchor": "focus-management"
        }
      ],
      "content": "A Hacker's Brand Brand Guidelines Brand Guidelines The definitive guide to the liquid glass terminal fusion design system. Learn the principles, rules, and best practices. (selectedSection = key)} data-magnetic > Core Principles Brand Equation Apple Minimalism + Terminal Culture = Liquid Glass Terminal Fusion Apple Minimalism Clean interfaces Refined interactions Premium materials System fonts Terminal Culture Monospace typography Command-line patterns Hacker aesthetics Terminal colors Liquid Glass Fusion Translucent layers Magnetic micro-interactions Fluid animations Glass morphism Brand Personality Professional yet Approachable Innovative but Familiar Powerful yet Elegant Voice & Tone Tone • Confident • Knowledgeable • Subtly playful Voice • Direct • Precise • Occasionally technical Emotion • Curiosity • Mastery • Satisfaction Primary Typeface: PP Supply Sans Usage • Headers and body text • UI elements • Marketing materials • Documentation Characteristics • Geometric and modern • Highly legible • Professional appearance • Excellent readability The quick brown fox jumps over the lazy dog PP Supply Sans Secondary Typeface: PP Supply Mono Usage • Code blocks • Terminal interfaces • Technical content • Data displays Characteristics • Monospaced • Terminal-authentic • Excellent for code • Clear character distinction The quick brown fox jumps over the lazy dog PP Supply Mono Color Usage Rules Primary Blue (#007aff) • Primary buttons and CTAs • Focus states and selection • Links and interactive elements • Loading states and progress Terminal Green (#30d158) • Success states and confirmations • Terminal prompts and active states • Positive feedback • Command execution indicators Accessibility Requirements Text contrast ratio 4.5:1 minimum Large text contrast ratio 3:1 minimum UI elements contrast ratio 3:1 minimum Glass Effect Guidelines ✅ Do • Layer glass components for depth • Use blur effects strategically • Maintain consistent opacity levels • Test readability over various backgrounds • Use subtle transparency for elegance ❌ Don't • Overuse heavy glass effects • Mix glass with solid backgrounds • Stack more than 3 glass layers • Ignore accessibility contrast requirements • Use glass for critical text content Glass Intensity Levels Motion Principles Fluid & Natural Animations feel organic and physics-based Purposeful Every animation serves a functional purpose Subtle Motion enhances, never distracts Responsive Animations adapt to user preferences Signature Effects Magnetic Hover Elements subtly respond to cursor proximity Glass Ripple Click interactions create expanding glass ripples Do's and Don'ts ✅ Do • ❌ Don't • Usage Examples ✅ Correct ❌ Incorrect Why: Accessibility Standards Color Contrast • Text: 4.5:1 contrast ratio minimum • Large text: 3:1 contrast ratio minimum • UI elements: 3:1 contrast ratio minimum • Test with various backdrop images Motion & Animation • Respect prefers-reduced-motion • Provide alternative static states • Avoid seizure-inducing effects • Keep animations under 5 seconds Implementation Guidelines Reduced Motion Focus Management Code copied to clipboard! Follow these guidelines to maintain design system consistency and quality",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.842Z"
    },
    {
      "id": "docs-components-brandstyleguide",
      "title": "BrandStyleguide Component",
      "description": "BrandStyleguide component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/brandstyleguide",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "BrandStyleguide",
          "anchor": "brandstyleguide"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "BrandStyleguide v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.830Z"
    },
    {
      "id": "docs-components-breadcrumb",
      "title": "Breadcrumb Component",
      "description": "Breadcrumb component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/breadcrumb",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Breadcrumb",
          "anchor": "breadcrumb"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Breadcrumb v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.830Z"
    },
    {
      "id": "docs-components-button",
      "title": "Button Component",
      "description": "Interactive button component with liquid glass morphism, magnetic hover effects, and terminal-inspired aesthetics. Built for accessibility and performance.",
      "url": "/docs/components/button",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Button",
          "anchor": "button"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Button v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.831Z"
    },
    {
      "id": "docs-components-card",
      "title": "Card Component",
      "description": "Versatile container component with liquid glass aesthetics and hover effects.",
      "url": "/docs/components/card",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Card",
          "anchor": "card"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Card v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.831Z"
    },
    {
      "id": "docs-components-carousel",
      "title": "Carousel Component",
      "description": "Carousel component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/carousel",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Carousel",
          "anchor": "carousel"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Carousel v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.831Z"
    },
    {
      "id": "docs-components-checkbox",
      "title": "Checkbox Component",
      "description": "Checkbox component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/checkbox",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Checkbox",
          "anchor": "checkbox"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Checkbox v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.831Z"
    },
    {
      "id": "docs-components-codehighlight",
      "title": "CodeHighlight Component",
      "description": "CodeHighlight component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/codehighlight",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "CodeHighlight",
          "anchor": "codehighlight"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "CodeHighlight v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.831Z"
    },
    {
      "id": "docs-components-commandblock",
      "title": "CommandBlock Component",
      "description": "CommandBlock component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/commandblock",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "CommandBlock",
          "anchor": "commandblock"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "CommandBlock v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.831Z"
    },
    {
      "id": "docs-components",
      "title": "Components - Liquid Glass Terminal Fusion",
      "description": "Interactive showcase of all liquid glass components with live demos and code examples.",
      "url": "/docs/components",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 3,
          "text": "Terminal Output",
          "anchor": "terminal-output"
        },
        {
          "level": 2,
          "text": "Confirm Deployment",
          "anchor": "confirm-deployment"
        },
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Component Library",
          "anchor": "component-library"
        },
        {
          "level": 4,
          "text": "Code Example",
          "anchor": "code-example"
        },
        {
          "level": 4,
          "text": "Live Demo",
          "anchor": "live-demo"
        },
        {
          "level": 5,
          "text": "Terminal Output",
          "anchor": "terminal-output"
        },
        {
          "level": 3,
          "text": "Confirm Deployment",
          "anchor": "confirm-deployment"
        },
        {
          "level": 3,
          "text": "Advanced WebGL Scene",
          "anchor": "advanced-webgl-scene"
        }
      ],
      "content": "A Hacker's Brand Components Component Library Interactive showcase of all liquid glass components with live demos, code examples, and usage guidelines. (selectedTab = key)} data-magnetic > Code Example Live Demo Deploy to Production Secondary Ghost Danger Terminal Output $ npm run build ✓ Build completed in 1.2s (showModal = true)}>Open Modal Confirm Deployment Are you sure you want to deploy to production? (showModal = false)}>Deploy (showModal = false)}>Cancel Code Preview Docs $ npm run dev > Ready in 2.3s ✓ Local server running Primary Secondary Success Warning Danger Value: Enable notifications (showToast = true)}>Show Toast (showToast = false)} /> 🚧 Demo coming soon Advanced WebGL Scene Loading WebGL scene... Component library built with liquid glass design principles",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.828Z"
    },
    {
      "id": "docs-components-datagrid",
      "title": "DataGrid Component",
      "description": "DataGrid component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/datagrid",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "DataGrid",
          "anchor": "datagrid"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "DataGrid v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.832Z"
    },
    {
      "id": "docs-components-datatable",
      "title": "DataTable Component",
      "description": "DataTable component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/datatable",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "DataTable",
          "anchor": "datatable"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "DataTable v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.832Z"
    },
    {
      "id": "docs-components-datepicker",
      "title": "DatePicker Component",
      "description": "DatePicker component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/datepicker",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "DatePicker",
          "anchor": "datepicker"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "DatePicker v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.832Z"
    },
    {
      "id": "docs-tokens",
      "title": "Design Tokens - Liquid Glass Terminal Fusion",
      "description": "Complete design system tokens including colors, typography, spacing, and component specifications.",
      "url": "/docs/tokens",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Design Tokens",
          "anchor": "design-tokens"
        },
        {
          "level": 3,
          "text": "Primary Colors",
          "anchor": "primary-colors"
        },
        {
          "level": 3,
          "text": "Terminal Colors",
          "anchor": "terminal-colors"
        },
        {
          "level": 3,
          "text": "Glass Colors",
          "anchor": "glass-colors"
        },
        {
          "level": 4,
          "text": "Glass",
          "anchor": "glass"
        },
        {
          "level": 3,
          "text": "Font Families",
          "anchor": "font-families"
        },
        {
          "level": 3,
          "text": "Font Sizes",
          "anchor": "font-sizes"
        },
        {
          "level": 3,
          "text": "Spacing Scale",
          "anchor": "spacing-scale"
        },
        {
          "level": 3,
          "text": "Glass Shadows",
          "anchor": "glass-shadows"
        },
        {
          "level": 3,
          "text": "Focus Shadows",
          "anchor": "focus-shadows"
        },
        {
          "level": 3,
          "text": "Animation Duration",
          "anchor": "animation-duration"
        },
        {
          "level": 3,
          "text": "Easing Functions",
          "anchor": "easing-functions"
        },
        {
          "level": 3,
          "text": "Blur Levels",
          "anchor": "blur-levels"
        },
        {
          "level": 3,
          "text": "Tokens",
          "anchor": "tokens"
        }
      ],
      "content": "A Hacker's Brand Design Tokens Design Tokens The foundational design decisions that drive the entire liquid glass terminal fusion system. (selectedTokenCategory = key)} data-magnetic > Primary Colors copyToken(`primary-$ `, color)} onkeydown= `, color)} aria-label= color $ `} tabindex=\"0\" > Click to copy primary- Terminal Colors copyToken(`terminal-$ `, color)} onkeydown= `, color)} aria-label= color $ `} tabindex=\"0\" > Click to copy terminal- Glass Colors Glass copyToken(`glass-$ -$ `, color)} onkeydown= -$ `, color)} aria-label= $ color $ `} tabindex=\"0\" > Copy Font Families copyToken(`font-$ `, family.join(', '))} onkeydown= `, family.join(', '))} aria-label= : $ `} tabindex=\"0\" > Click to copy The quick brown fox jumps over the lazy dog Font Sizes copyToken(`text-$ `, fontSize)} onkeydown= `, fontSize)} aria-label= : $ `} tabindex=\"0\" > Sample Text Spacing Scale copyToken(`spacing-$ `, value)} onkeydown= `, value)} aria-label= : $ `} tabindex=\"0\" > Click to copy Glass Shadows copyToken(`shadow-glass-$ `, shadow)} onkeydown= `, shadow)} aria-label= `} tabindex=\"0\" > Click to copy glass- Focus Shadows copyToken(`shadow-focus-$ `, shadow)} onkeydown= `, shadow)} aria-label= `} tabindex=\"0\" > Click to copy focus- Animation Duration copyToken(`duration-$ `, duration)} onkeydown= `, duration)} aria-label= : $ `} tabindex=\"0\" > Click to copy Easing Functions copyToken(`ease-$ `, easing)} onkeydown= `, easing)} aria-label= : $ `} tabindex=\"0\" > Click to copy Blur Levels copyToken(`blur-$ `, blur)} onkeydown= `, blur)} aria-label= : $ `} tabindex=\"0\" > Click to copy Tokens copyToken(`$ -$ -$ `, value)} onkeydown= -$ -$ `, value)} aria-label= $ $ : $ `} tabindex=\"0\" > Token copied to clipboard! Design tokens that define the liquid glass terminal fusion aesthetic",
      "type": "component",
      "lastModified": "2025-07-10T17:49:40.047Z"
    },
    {
      "id": "docs-+layout.svelte",
      "title": "Documentation - Tulio Brand System",
      "description": "Complete documentation for the Liquid Glass Terminal Fusion Design System",
      "url": "/docs/+layout.svelte",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 2,
          "text": "Documentation",
          "anchor": "documentation"
        }
      ],
      "content": "A Hacker's Brand Search documentation... ⌘K Documentation }} role=\"presentation\" aria-hidden=\"true\" > Documentation Menu",
      "type": "component",
      "lastModified": "2025-07-10T13:40:34.971Z"
    },
    {
      "id": "docs-components-drawer",
      "title": "Drawer Component",
      "description": "Drawer component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/drawer",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Drawer",
          "anchor": "drawer"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Drawer v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.832Z"
    },
    {
      "id": "docs-components-dropdown",
      "title": "Dropdown Component",
      "description": "Dropdown component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/dropdown",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Dropdown",
          "anchor": "dropdown"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Dropdown v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.833Z"
    },
    {
      "id": "docs-components-errorboundary",
      "title": "ErrorBoundary Component",
      "description": "ErrorBoundary component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/errorboundary",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "ErrorBoundary",
          "anchor": "errorboundary"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "ErrorBoundary v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.833Z"
    },
    {
      "id": "docs-components-fileupload",
      "title": "FileUpload Component",
      "description": "FileUpload component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/fileupload",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "FileUpload",
          "anchor": "fileupload"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "FileUpload v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.833Z"
    },
    {
      "id": "docs-components-formerrorboundary",
      "title": "FormErrorBoundary Component",
      "description": "FormErrorBoundary component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/formerrorboundary",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "FormErrorBoundary",
          "anchor": "formerrorboundary"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "FormErrorBoundary v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.833Z"
    },
    {
      "id": "docs-components-glassscene",
      "title": "GlassScene Component",
      "description": "GlassScene component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/glassscene",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "GlassScene",
          "anchor": "glassscene"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "GlassScene v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.834Z"
    },
    {
      "id": "docs-iconography",
      "title": "Iconography Design System",
      "description": "Icon system combining SF Symbols principles with CLI aesthetics and liquid glass design",
      "url": "/docs/iconography",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Iconography System",
          "anchor": "iconography-system"
        },
        {
          "level": 2,
          "text": "Design Principles",
          "anchor": "design-principles"
        },
        {
          "level": 2,
          "text": "Size Scale",
          "anchor": "size-scale"
        },
        {
          "level": 2,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Basic Usage",
          "anchor": "basic-usage"
        },
        {
          "level": 3,
          "text": "With Liquid Glass Effects",
          "anchor": "with-liquid-glass-effects"
        },
        {
          "level": 3,
          "text": "Interactive States",
          "anchor": "interactive-states"
        }
      ],
      "content": "A Hacker's Brand Iconography Iconography System SF Symbols-inspired icons with CLI aesthetics and liquid glass integration. Every icon tells a story in the language of hackers and terminal interfaces. (selectedCategory = key)} data-magnetic > Design Principles Size Scale Our icon sizing follows a consistent scale that ensures optimal readability and visual hierarchy across all interface elements. / size= Implementation Basic Usage `} language=\"svelte\" /> With Liquid Glass Effects `} language=\"svelte\" /> Interactive States `} language=\"svelte\" /> copyIconCode(icon.name)} data-magnetic title=\"Click to copy code\" > Copied!",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.842Z"
    },
    {
      "id": "docs-components-input",
      "title": "Input Component",
      "description": "Elegant input field with liquid glass effects, floating labels, and comprehensive validation support.",
      "url": "/docs/components/input",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Input",
          "anchor": "input"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Input v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.834Z"
    },
    {
      "id": "docs-components-lazyterminalwindow",
      "title": "LazyTerminalWindow Component",
      "description": "LazyTerminalWindow component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/lazyterminalwindow",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "LazyTerminalWindow",
          "anchor": "lazyterminalwindow"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "LazyTerminalWindow v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.834Z"
    },
    {
      "id": "docs-components-lazythreltecanvas",
      "title": "LazyThrelteCanvas Component",
      "description": "LazyThrelteCanvas component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/lazythreltecanvas",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "LazyThrelteCanvas",
          "anchor": "lazythreltecanvas"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "LazyThrelteCanvas v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.834Z"
    },
    {
      "id": "docs-",
      "title": "Liquid Glass Terminal Fusion - Design System Documentation",
      "description": "A jaw-dropping fusion of Apple's liquid glass design language with terminal hacker aesthetics. Interactive documentation and component showcase.",
      "url": "/docs/",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Design System",
          "anchor": "design-system"
        },
        {
          "level": 2,
          "text": "Explore the System",
          "anchor": "explore-the-system"
        },
        {
          "level": 2,
          "text": "Quick Start",
          "anchor": "quick-start"
        },
        {
          "level": 3,
          "text": "1. Install the package",
          "anchor": "1-install-the-package"
        },
        {
          "level": 3,
          "text": "2. Import components",
          "anchor": "2-import-components"
        },
        {
          "level": 3,
          "text": "3. Start building",
          "anchor": "3-start-building"
        }
      ],
      "content": "A Hacker's Brand Overview Design System A jaw-dropping fusion of Apple's liquid glass design language with terminal hacker aesthetics . Professional, innovative, and magnetic. $ npm install @tulio/liquid-glass-system copyCommand('npm install @tulio/liquid-glass-system')} title=\"Copy command\" > ▓ Installing liquid glass components... ✓ Components installed successfully ✓ Design tokens configured ✓ Ready to build jaw-dropping interfaces $ npm run dev ▓ Explore the System Comprehensive documentation and interactive examples Explore Quick Start 1. Install the package 2. Import components 3. Start building Deploy to Production \" language=\"svelte\" /> Built with ♥ by Tulio Pinheiro Cunha Liquid Glass Terminal Fusion Design System v0.2.0",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.827Z"
    },
    {
      "id": "docs-components-liquidterminal",
      "title": "LiquidTerminal Component",
      "description": "LiquidTerminal component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/liquidterminal",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "LiquidTerminal",
          "anchor": "liquidterminal"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "LiquidTerminal v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.834Z"
    },
    {
      "id": "docs-components-list",
      "title": "List Component",
      "description": "List component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/list",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "List",
          "anchor": "list"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "List v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.835Z"
    },
    {
      "id": "docs-components-matrixrain",
      "title": "MatrixRain Component",
      "description": "MatrixRain component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/matrixrain",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "MatrixRain",
          "anchor": "matrixrain"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "MatrixRain v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.835Z"
    },
    {
      "id": "docs-components-menu",
      "title": "Menu Component",
      "description": "Menu component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/menu",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Menu",
          "anchor": "menu"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Menu v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.835Z"
    },
    {
      "id": "docs-components-metricscard",
      "title": "MetricsCard Component",
      "description": "MetricsCard component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/metricscard",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "MetricsCard",
          "anchor": "metricscard"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "MetricsCard v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.835Z"
    },
    {
      "id": "docs-components-modal",
      "title": "Modal Component",
      "description": "Responsive modal dialog with backdrop blur, focus management, and smooth animations.",
      "url": "/docs/components/modal",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Modal",
          "anchor": "modal"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Modal v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.835Z"
    },
    {
      "id": "docs-motion",
      "title": "Motion System - Liquid Glass Terminal Fusion",
      "description": "Comprehensive motion and animation system with interactive demos, easing functions, and responsive motion patterns.",
      "url": "/docs/motion",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "A Hacker's Brand",
          "anchor": "a-hackers-brand"
        },
        {
          "level": 1,
          "text": "Motion System",
          "anchor": "motion-system"
        },
        {
          "level": 4,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Liquid Blur Transitions",
          "anchor": "liquid-blur-transitions"
        },
        {
          "level": 4,
          "text": "Usage Examples",
          "anchor": "usage-examples"
        },
        {
          "level": 3,
          "text": "Glass Fade Transitions",
          "anchor": "glass-fade-transitions"
        },
        {
          "level": 4,
          "text": "Directional Options",
          "anchor": "directional-options"
        },
        {
          "level": 3,
          "text": "Spring Pop Transitions",
          "anchor": "spring-pop-transitions"
        },
        {
          "level": 4,
          "text": "Spring Configurations",
          "anchor": "spring-configurations"
        },
        {
          "level": 3,
          "text": "Magnetic Hover",
          "anchor": "magnetic-hover"
        },
        {
          "level": 4,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Jelly Motion",
          "anchor": "jelly-motion"
        },
        {
          "level": 4,
          "text": "Jelly Variants",
          "anchor": "jelly-variants"
        },
        {
          "level": 3,
          "text": "Easing Functions",
          "anchor": "easing-functions"
        },
        {
          "level": 3,
          "text": "Duration Scale",
          "anchor": "duration-scale"
        },
        {
          "level": 3,
          "text": "Reduced Motion Support",
          "anchor": "reduced-motion-support"
        },
        {
          "level": 4,
          "text": "✓ Automatic Detection",
          "anchor": "-automatic-detection"
        },
        {
          "level": 4,
          "text": "⚡ Graceful Degradation",
          "anchor": "-graceful-degradation"
        },
        {
          "level": 4,
          "text": "Implementation",
          "anchor": "implementation"
        },
        {
          "level": 3,
          "text": "Performance Optimization",
          "anchor": "performance-optimization"
        },
        {
          "level": 4,
          "text": "Smart Defaults",
          "anchor": "smart-defaults"
        },
        {
          "level": 4,
          "text": "Best Practices",
          "anchor": "best-practices"
        }
      ],
      "content": "A Hacker's Brand Motion System Motion System Fluid, responsive animations that bring the liquid glass terminal fusion aesthetic to life. (selectedMotion = key)} data-magnetic > Duration: triggerDemo(preset.name)} use:presets[preset.name] > ⚡ triggerDemo(preset.name)} > Play Demo Implementation copyCode(preset.demo)} > Copy Code Liquid Blur Transitions Smooth liquid-inspired blur effects that create depth and fluidity. Hover to see different blur intensities Usage Examples Glass Fade Transitions Elegant entrance and exit animations with directional movement. Fade Directional Options Spring Pop Transitions Elastic spring-based animations for interactive feedback. Bouncy Press Scale Up Spring Configurations Magnetic Hover Elements subtly follow cursor movement creating magnetic attraction. Hover over elements to see magnetic effect Implementation Jelly Motion Elastic jelly-like deformations for playful interactions. 🍮 🌊 Hover for jelly effects Jelly Variants Easing Functions Animation Preview CSS: copyCode(easing.value)} > Copy Value Duration Scale } > Reduced Motion Support Automatically respects user's motion preferences for accessibility. ✓ Automatic Detection All motion components automatically detect and respect prefers-reduced-motion ⚡ Graceful Degradation Animations fade to instant or minimal transitions when reduced motion is preferred Implementation Performance Optimization Smart Defaults • Hardware acceleration when beneficial • Automatic cleanup on unmount • Optimized for 60fps on modern devices • Progressive enhancement approach Best Practices `} language=\"css\" /> Motion that enhances the liquid glass terminal fusion experience",
      "type": "component",
      "lastModified": "2025-07-10T17:37:22.811Z"
    },
    {
      "id": "docs-components-multiselect",
      "title": "MultiSelect Component",
      "description": "MultiSelect component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/multiselect",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "MultiSelect",
          "anchor": "multiselect"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "MultiSelect v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.836Z"
    },
    {
      "id": "docs-components-navbar",
      "title": "Navbar Component",
      "description": "Navbar component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/navbar",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Navbar",
          "anchor": "navbar"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Navbar v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.836Z"
    },
    {
      "id": "docs-components-pagination",
      "title": "Pagination Component",
      "description": "Pagination component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/pagination",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Pagination",
          "anchor": "pagination"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Pagination v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.836Z"
    },
    {
      "id": "docs-components-performancedashboard",
      "title": "PerformanceDashboard Component",
      "description": "PerformanceDashboard component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/performancedashboard",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "PerformanceDashboard",
          "anchor": "performancedashboard"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "PerformanceDashboard v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.836Z"
    },
    {
      "id": "docs-components-performancemonitor",
      "title": "PerformanceMonitor Component",
      "description": "PerformanceMonitor component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/performancemonitor",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "PerformanceMonitor",
          "anchor": "performancemonitor"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "PerformanceMonitor v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.836Z"
    },
    {
      "id": "docs-components-perfoverlay",
      "title": "PerfOverlay Component",
      "description": "PerfOverlay component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/perfoverlay",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "PerfOverlay",
          "anchor": "perfoverlay"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "PerfOverlay v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.837Z"
    },
    {
      "id": "docs-playground",
      "title": "Playground",
      "description": "Interactive playground for A Hacker's Brand design system components",
      "url": "/docs/playground",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Welcome to the Playground!",
          "anchor": "welcome-to-the-playground"
        },
        {
          "level": 1,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        }
      ],
      "content": "Interactive Playground Experiment with A Hacker's Brand components in real-time. Edit the code on the left and see the results on the right. playgroundStore.formatCode()} /> Loading playground... else if (e.key === 'ArrowRight') }} >",
      "type": "component",
      "lastModified": "2025-07-10T17:38:41.507Z"
    },
    {
      "id": "docs-components-portfoliocard",
      "title": "PortfolioCard Component",
      "description": "PortfolioCard component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/portfoliocard",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "PortfolioCard",
          "anchor": "portfoliocard"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "PortfolioCard v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.837Z"
    },
    {
      "id": "docs-components-progress",
      "title": "Progress Component",
      "description": "Progress indicator with liquid animations and customizable styling.",
      "url": "/docs/components/progress",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Progress",
          "anchor": "progress"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Progress v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.837Z"
    },
    {
      "id": "docs-components-radio",
      "title": "Radio Component",
      "description": "Radio component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/radio",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Radio",
          "anchor": "radio"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Radio v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.837Z"
    },
    {
      "id": "docs-components-responsivedemo",
      "title": "ResponsiveDemo Component",
      "description": "ResponsiveDemo component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/responsivedemo",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "ResponsiveDemo",
          "anchor": "responsivedemo"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "ResponsiveDemo v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.837Z"
    },
    {
      "id": "docs-components-retrofuturistictext",
      "title": "RetroFuturisticText Component",
      "description": "RetroFuturisticText component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/retrofuturistictext",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "RetroFuturisticText",
          "anchor": "retrofuturistictext"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "RetroFuturisticText v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.838Z"
    },
    {
      "id": "docs-components-retrotext",
      "title": "RetroText Component",
      "description": "RetroText component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/retrotext",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "RetroText",
          "anchor": "retrotext"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "RetroText v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.838Z"
    },
    {
      "id": "docs-components-select",
      "title": "Select Component",
      "description": "Select component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/select",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Select",
          "anchor": "select"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Select v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.838Z"
    },
    {
      "id": "docs-components-selectadvanced",
      "title": "SelectAdvanced Component",
      "description": "SelectAdvanced component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/selectadvanced",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "SelectAdvanced",
          "anchor": "selectadvanced"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "SelectAdvanced v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.838Z"
    },
    {
      "id": "docs-components-sidebar",
      "title": "Sidebar Component",
      "description": "Sidebar component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/sidebar",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Sidebar",
          "anchor": "sidebar"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Sidebar v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.839Z"
    },
    {
      "id": "docs-components-skeleton",
      "title": "Skeleton Component",
      "description": "Skeleton component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/skeleton",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Skeleton",
          "anchor": "skeleton"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Skeleton v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.839Z"
    },
    {
      "id": "docs-components-slider",
      "title": "Slider Component",
      "description": "Slider component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/slider",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Slider",
          "anchor": "slider"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Slider v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.839Z"
    },
    {
      "id": "docs-components-switch",
      "title": "Switch Component",
      "description": "Switch component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/switch",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Switch",
          "anchor": "switch"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Switch v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.839Z"
    },
    {
      "id": "docs-components-table",
      "title": "Table Component",
      "description": "Table component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/table",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Table",
          "anchor": "table"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Table v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.839Z"
    },
    {
      "id": "docs-components-tabs",
      "title": "Tabs Component",
      "description": "Tabbed interface component with smooth transitions and keyboard navigation.",
      "url": "/docs/components/tabs",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Tabs",
          "anchor": "tabs"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Tabs v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.839Z"
    },
    {
      "id": "docs-components-terminalorbit",
      "title": "TerminalOrbit Component",
      "description": "TerminalOrbit component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/terminalorbit",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "TerminalOrbit",
          "anchor": "terminalorbit"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "TerminalOrbit v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.840Z"
    },
    {
      "id": "docs-components-terminalstartup",
      "title": "TerminalStartup Component",
      "description": "TerminalStartup component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/terminalstartup",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "TerminalStartup",
          "anchor": "terminalstartup"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "TerminalStartup v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.840Z"
    },
    {
      "id": "docs-components-terminalwindow",
      "title": "TerminalWindow Component",
      "description": "Retro terminal window with authentic CLI aesthetics and animations.",
      "url": "/docs/components/terminalwindow",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "TerminalWindow",
          "anchor": "terminalwindow"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "TerminalWindow v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.840Z"
    },
    {
      "id": "docs-components-textarea",
      "title": "Textarea Component",
      "description": "Textarea component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/textarea",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Textarea",
          "anchor": "textarea"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Textarea v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.840Z"
    },
    {
      "id": "docs-components-threltecanvas",
      "title": "ThrelteCanvas Component",
      "description": "ThrelteCanvas component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/threltecanvas",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "ThrelteCanvas",
          "anchor": "threltecanvas"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "ThrelteCanvas v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.841Z"
    },
    {
      "id": "docs-components-toast",
      "title": "Toast Component",
      "description": "Toast component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/toast",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Toast",
          "anchor": "toast"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Toast v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.841Z"
    },
    {
      "id": "docs-components-tooltip",
      "title": "Tooltip Component",
      "description": "Tooltip component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/tooltip",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "Tooltip",
          "anchor": "tooltip"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "Tooltip v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.841Z"
    },
    {
      "id": "docs-components-vintagemacscreen",
      "title": "VintageMacScreen Component",
      "description": "VintageMacScreen component with liquid glass effects and terminal aesthetics.",
      "url": "/docs/components/vintagemacscreen",
      "keywords": [
        "component",
        "ui",
        "svelte"
      ],
      "category": "",
      "tags": [],
      "headings": [
        {
          "level": 1,
          "text": "VintageMacScreen",
          "anchor": "vintagemacscreen"
        },
        {
          "level": 2,
          "text": "Interactive Playground",
          "anchor": "interactive-playground"
        },
        {
          "level": 2,
          "text": "Examples",
          "anchor": "examples"
        },
        {
          "level": 3,
          "text": "Usage",
          "anchor": "usage"
        },
        {
          "level": 4,
          "text": "Preview",
          "anchor": "preview"
        },
        {
          "level": 4,
          "text": "Code",
          "anchor": "code"
        },
        {
          "level": 2,
          "text": "API Reference",
          "anchor": "api-reference"
        },
        {
          "level": 3,
          "text": "Props",
          "anchor": "props"
        },
        {
          "level": 3,
          "text": "Events",
          "anchor": "events"
        },
        {
          "level": 2,
          "text": "Accessibility",
          "anchor": "accessibility"
        },
        {
          "level": 3,
          "text": "Built-in Features",
          "anchor": "built-in-features"
        },
        {
          "level": 2,
          "text": "Related Components",
          "anchor": "related-components"
        },
        {
          "level": 3,
          "text": "Button",
          "anchor": "button"
        }
      ],
      "content": "VintageMacScreen v Preview Secondary Ghost Interactive Playground Experiment with different props and see the changes in real-time. Examples (activeExample = tab.id)} > Usage Preview Example Code API Reference Props Events Accessibility Built-in Features • Keyboard navigation support • Focus management with visible indicators • Screen reader compatible • ARIA attributes and roles Related Components Button Interactive buttons with effects",
      "type": "component",
      "lastModified": "2025-07-10T00:02:37.841Z"
    }
  ],
  "categories": [],
  "tags": [
    "component",
    "svelte",
    "ui"
  ],
  "lastUpdated": "2025-07-10T21:25:53.885Z",
  "version": "1.0.0",
  "stats": {
    "totalDocuments": 75,
    "totalCategories": 0,
    "totalTags": 3
  }
}