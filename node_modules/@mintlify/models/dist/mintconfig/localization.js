/*
Currently supported languages, should be ISO 639:
English - en
Chinese - cn, ISO 639 = zh
Simplified Chinese - zh-Hans
Traditional Chinese - zh-Hant
Spanish - es
French - fr
Japanese - jp, ISO 639 = ja
Portuguese - pt
Brazilian Portugese - pt-BR
German - de
Korean - ko
Italian - it
Russian - ru
Indonesian - id
Arabic - ar
Turkish - tr

*/
export const locales = [
    'en',
    'cn',
    'zh',
    'zh-Hans',
    'zh-Hant',
    'es',
    'fr',
    'fr-CA',
    'ja',
    'jp',
    'pt',
    'pt-BR',
    'de',
    'ko',
    'it',
    'ru',
    'id',
    'ar',
    'tr',
    'hi',
];
export const localeDisplayNames = {
    en: 'English',
    cn: 'Chinese',
    zh: 'Chinese',
    'zh-Hans': 'Simplified Chinese',
    'zh-Hant': 'Traditional Chinese',
    es: 'Spanish',
    fr: 'French',
    'fr-CA': 'Canadian French',
    ja: 'Japanese',
    jp: 'Japanese',
    pt: 'Portuguese',
    'pt-BR': 'Brazilian Portuguese',
    de: 'German',
    ko: 'Korean',
    it: 'Italian',
    ru: 'Russian',
    id: 'Indonesian',
    ar: 'Arabic',
    tr: 'Turkish',
    hi: 'Hindi',
};
export const localeDisplayFlags = {
    en: '🇺🇸',
    cn: '🇨🇳',
    zh: '🇨🇳',
    'zh-Hans': '🇨🇳',
    'zh-Hant': '🇹🇼',
    es: '🇪🇸',
    fr: '🇫🇷',
    'fr-CA': '🇨🇦',
    ja: '🇯🇵',
    jp: '🇯🇵',
    pt: '🇧🇷',
    'pt-BR': '🇧🇷',
    de: '🇩🇪',
    ko: '🇰🇷',
    it: '🇮🇹',
    ru: '🇷🇺',
    id: '🇮🇩',
    ar: '🇸🇦',
    tr: '🇹🇷',
    hi: '🇮🇳',
};
export const getLocaleDisplayName = (locale) => {
    return localeDisplayNames[locale];
};
export const getLocaleDisplayFlag = (locale) => {
    return localeDisplayFlags[locale];
};
export const LocaleCodes = Object.keys(localeDisplayNames);
export const LocaleDisplayNames = Object.values(localeDisplayNames);
export const LocaleDisplayFlags = Object.values(localeDisplayFlags);
const UNSUPPORTED_LOCALE_CODES = ['jp', 'cn', 'zh', 'zh-Hans', 'zh-Hant'];
export const LlmSupportedLocaleCodes = LocaleCodes.filter((locale) => !UNSUPPORTED_LOCALE_CODES.includes(locale));
export const LlmSupportedLocaleDisplayNames = LocaleDisplayNames.filter((locale) => locale !== 'Chinese');
export const LlmSupportedLocaleDisplayFlags = LocaleDisplayFlags.filter((locale) => locale !== '🇨🇳');
