import { GithubInstallationType } from '../types/githubInstallationType.js';
import { GitlabInstallationType } from '../types/gitlabInstallationType.js';
import { GrowthDataType } from '../types/growthDataType.js';
import { OrgEntitlements } from './orgEntitlements.js';
type PlanType = 'trial' | 'startup' | 'pro' | 'growth' | 'enterprise';
export declare const PLAN_TIERS: readonly ["hobby", "trial", "pro", "proJul25", "growth", "enterprise"];
export type PlanTypeV2 = (typeof PLAN_TIERS)[number];
export type OriginalOrgType = {
    _id: string;
    name: string;
    stytchOrgId: string;
    githubInstallations: GithubInstallationType[];
    gitlabInstallations: GitlabInstallationType[];
    plan?: PlanType | PlanTypeV2;
    createdAt?: Date | string;
    growthData?: GrowthDataType;
    slug: string;
    stripe?: {
        customerId: string;
    };
    entitlements?: OrgEntitlements;
};
export type OrgType = Omit<OriginalOrgType, 'plan'> & {
    plan: PlanTypeV2;
};
export declare function normalizePlan(plan: OriginalOrgType['plan']): OrgType['plan'];
export declare function normalizeOrgType(org: OriginalOrgType): OrgType;
export type StaticPropsOrgType = Pick<OrgType, 'plan' | 'createdAt'>;
export {};
