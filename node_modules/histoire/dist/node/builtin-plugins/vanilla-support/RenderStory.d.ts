import type { Story, Variant } from '@histoire/shared';
import type { PropType as _PropType } from '@histoire/vendors/vue';
declare const _default: import("@vue/runtime-core").DefineComponent<import("@vue/runtime-core").ExtractPropTypes<{
    variant: {
        type: _PropType<Variant>;
        required: true;
    };
    story: {
        type: _PropType<Story>;
        required: true;
    };
    slotName: {
        type: StringConstructor;
        default: string;
    };
}>, {
    sandbox: import("@vue/reactivity").Ref<HTMLDivElement, HTMLDivElement>;
}, {}, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {
    ready: () => true;
}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    variant: {
        type: _PropType<Variant>;
        required: true;
    };
    story: {
        type: _PropType<Story>;
        required: true;
    };
    slotName: {
        type: StringConstructor;
        default: string;
    };
}>> & Readonly<{
    onReady?: () => any;
}>, {
    slotName: string;
}, {}, {}, {}, string, import("@vue/runtime-core").ComponentProvideOptions, true, {}, any>;
export default _default;
//# sourceMappingURL=RenderStory.d.ts.map