'use client';\n\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Terminal, \n  Zap, \n  Settings, \n  Activity, \n  Code, \n  Sparkles,\n  ArrowRight,\n  Play,\n  Pause\n} from 'lucide-react';\nimport { TerminalWindow, CommandBlock, AICommandSuggestions, PerformanceMonitor } from '@/components/terminal';\nimport { Card } from '@/glass-ui/src/components/card';\nimport { Button } from '@/glass-ui/src/components/button';\nimport { cn } from '@/lib/utils';\n\ninterface DemoSection {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ElementType;\n  component: React.ReactNode;\n}\n\nexport default function DemoPage() {\n  const [activeSection, setActiveSection] = useState('terminal');\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [performanceMetrics, setPerformanceMetrics] = useState({\n    avgResponseTime: 45,\n    commandCount: 23,\n    frameRate: 60,\n    memoryUsage: 2.3,\n    cpuUsage: 15,\n    networkLatency: 32,\n    activeConnections: 3\n  });\n\n  // Mock command executor for demo\n  const executeCommand = async (command: string) => {\n    const delay = Math.random() * 1000 + 500; // 0.5-1.5s delay\n    await new Promise(resolve => setTimeout(resolve, delay));\n    \n    const responses: Record<string, string> = {\n      'help': '🚀 Available commands: help, whoami, skills, projects, contact, performance, demo',\n      'whoami': '🧑‍💻 Tulio Cunha - Full Stack Developer & Design System Architect\\nSpecializing in liquid glass interfaces and terminal experiences',\n      'skills': '⚡ Core Technologies:\\n• Frontend: React, Next.js, TypeScript, Three.js\\n• Design: Framer Motion, Tailwind CSS, Glass UI\\n• Performance: WebGL, WebAssembly, WebGPU\\n• Tools: Git, Docker, AWS, Vercel',\n      'projects': '🏗️ Featured Projects:\\n• Glass UI - Advanced React component library\\n• Liquid Terminal - This interactive terminal\\n• Neural Network Visualizer - WebGPU accelerated\\n• Performance Dashboard - Real-time metrics',\n      'contact': '📫 Get in touch:\\n• Email: tulio@tuliocunha.dev\\n• GitHub: github.com/tuliopc23\\n• Portfolio: tuliocunha.dev',\n      'performance': `⚡ System Status:\\n• Response Time: ${performanceMetrics.avgResponseTime}ms\\n• Frame Rate: ${performanceMetrics.frameRate}fps\\n• Memory Usage: ${performanceMetrics.memoryUsage}GB\\n• CPU Usage: ${performanceMetrics.cpuUsage}%`,\n      'demo': '🎮 Demo Mode Activated!\\nExplore the terminal with commands like:\\n• help - Show available commands\\n• skills - View technical skills\\n• projects - Browse featured work'\n    };\n\n    const output = responses[command.toLowerCase()] || `Command \"${command}\" executed successfully!\\nOutput: ${command} - Demo response`;\n    \n    return {\n      output,\n      status: Math.random() > 0.1 ? 'success' as const : 'error' as const,\n      duration: delay\n    };\n  };\n\n  const demoSections: DemoSection[] = [\n    {\n      id: 'terminal',\n      title: 'Liquid Terminal',\n      description: 'Advanced terminal with AI suggestions and quantum effects',\n      icon: Terminal,\n      component: (\n        <TerminalWindow\n          title=\"Liquid Glass Terminal\"\n          theme=\"liquid\"\n          onCommandExecute={executeCommand}\n          aiSuggestions={true}\n          performance={true}\n          collaborative={false}\n          className=\"w-full\"\n        />\n      )\n    },\n    {\n      id: 'ai-suggestions',\n      title: 'AI Command Intelligence',\n      description: 'Smart command suggestions with reasoning',\n      icon: Sparkles,\n      component: (\n        <div className=\"space-y-4\">\n          <AICommandSuggestions\n            input=\"git\"\n            onSelect={(cmd) => console.log('Selected:', cmd)}\n            selectedIndex={1}\n            className=\"w-full\"\n          />\n          <AICommandSuggestions\n            input=\"npm\"\n            onSelect={(cmd) => console.log('Selected:', cmd)}\n            selectedIndex={0}\n            className=\"w-full\"\n          />\n        </div>\n      )\n    },\n    {\n      id: 'command-blocks',\n      title: 'Command Blocks',\n      description: 'Interactive command history with status indicators',\n      icon: Code,\n      component: (\n        <div className=\"space-y-4\">\n          <CommandBlock\n            command=\"npm install @/glass-ui\"\n            output=\"✅ Package installed successfully!\\n📦 Added 15 packages in 2.3s\"\n            status=\"success\"\n            timestamp={new Date()}\n            duration={2300}\n          />\n          <CommandBlock\n            command=\"yarn build\"\n            output=\"🚀 Building production bundle...\\n✨ Build completed in 4.2s\"\n            status=\"success\"\n            timestamp={new Date(Date.now() - 60000)}\n            duration={4200}\n          />\n          <CommandBlock\n            command=\"git push origin main\"\n            status=\"running\"\n            timestamp={new Date()}\n          />\n        </div>\n      )\n    },\n    {\n      id: 'performance',\n      title: 'Performance Monitor',\n      description: 'Real-time performance metrics and optimization tips',\n      icon: Activity,\n      component: (\n        <div className=\"space-y-4\">\n          <PerformanceMonitor\n            metrics={performanceMetrics}\n            variant=\"detailed\"\n            showTrends={true}\n            realTimeUpdates={isPlaying}\n            className=\"w-full\"\n          />\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <PerformanceMonitor\n              metrics={performanceMetrics}\n              variant=\"compact\"\n              className=\"w-full\"\n            />\n            <PerformanceMonitor\n              metrics={performanceMetrics}\n              variant=\"minimal\"\n              className=\"w-full\"\n            />\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  // Simulate real-time performance updates\n  React.useEffect(() => {\n    if (!isPlaying) return;\n    \n    const interval = setInterval(() => {\n      setPerformanceMetrics(prev => ({\n        ...prev,\n        avgResponseTime: Math.max(20, prev.avgResponseTime + (Math.random() - 0.5) * 10),\n        frameRate: Math.min(60, Math.max(30, prev.frameRate + (Math.random() - 0.5) * 5)),\n        memoryUsage: Math.max(1, prev.memoryUsage + (Math.random() - 0.5) * 0.1),\n        cpuUsage: Math.max(5, Math.min(95, prev.cpuUsage + (Math.random() - 0.5) * 10)),\n        networkLatency: Math.max(10, prev.networkLatency + (Math.random() - 0.5) * 20)\n      }));\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [isPlaying]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white\">\n      {/* Liquid Glass Background Effects */}\n      <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n        <motion.div\n          className=\"absolute -top-40 -right-40 w-80 h-80 bg-emerald-500/10 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 100, 0],\n            y: [0, -50, 0],\n            scale: [1, 1.2, 1]\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            ease: 'easeInOut'\n          }}\n        />\n        <motion.div\n          className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500/10 rounded-full blur-3xl\"\n          animate={{\n            x: [0, -100, 0],\n            y: [0, 50, 0],\n            scale: [1.2, 1, 1.2]\n          }}\n          transition={{\n            duration: 25,\n            repeat: Infinity,\n            ease: 'easeInOut'\n          }}\n        />\n      </div>\n\n      <div className=\"relative z-10\">\n        {/* Header */}\n        <motion.header\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"p-6 border-b border-white/10 backdrop-blur-xl bg-white/5\"\n        >\n          <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 8, repeat: Infinity, ease: 'linear' }}\n                className=\"p-3 rounded-full bg-gradient-to-br from-emerald-500/20 to-blue-500/20 border border-emerald-500/30\"\n              >\n                <Terminal className=\"w-6 h-6 text-emerald-400\" />\n              </motion.div>\n              <div>\n                <h1 className=\"text-2xl font-bold bg-gradient-to-r from-emerald-400 to-blue-400 bg-clip-text text-transparent\">\n                  Liquid Glass Terminal Fusion\n                </h1>\n                <p className=\"text-white/60\">Production-ready design system components</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <Button\n                variant=\"glass\"\n                size=\"sm\"\n                onClick={() => setIsPlaying(!isPlaying)}\n                className=\"flex items-center gap-2\"\n              >\n                {isPlaying ? (\n                  <><Pause className=\"w-4 h-4\" /> Pause Demo</>\n                ) : (\n                  <><Play className=\"w-4 h-4\" /> Start Demo</>\n                )}\n              </Button>\n              <Button variant=\"glass\" size=\"sm\">\n                <Settings className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </motion.header>\n\n        <div className=\"max-w-7xl mx-auto p-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n            {/* Sidebar Navigation */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              className=\"lg:col-span-1\"\n            >\n              <Card\n                variant=\"glass\"\n                blur=\"xl\"\n                className=\"p-4 sticky top-6\"\n              >\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                  <Zap className=\"w-5 h-5 text-emerald-400\" />\n                  Components\n                </h3>\n                <nav className=\"space-y-2\">\n                  {demoSections.map((section) => {\n                    const Icon = section.icon;\n                    const isActive = activeSection === section.id;\n                    \n                    return (\n                      <motion.button\n                        key={section.id}\n                        whileHover={{ scale: 1.02, x: 4 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => setActiveSection(section.id)}\n                        className={cn(\n                          'w-full text-left p-3 rounded-lg transition-all duration-200 flex items-center gap-3',\n                          isActive\n                            ? 'bg-emerald-500/20 border border-emerald-500/30 text-emerald-300'\n                            : 'hover:bg-white/10 text-white/70 hover:text-white'\n                        )}\n                      >\n                        <Icon className=\"w-4 h-4\" />\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-sm\">{section.title}</div>\n                          <div className=\"text-xs opacity-60\">{section.description}</div>\n                        </div>\n                        <ArrowRight className={cn(\n                          'w-3 h-3 transition-transform',\n                          isActive ? 'rotate-90' : ''\n                        )} />\n                      </motion.button>\n                    );\n                  })}\n                </nav>\n              </Card>\n            </motion.div>\n\n            {/* Main Content */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"lg:col-span-3\"\n            >\n              <AnimatePresence mode=\"wait\">\n                {demoSections.map((section) => {\n                  if (section.id !== activeSection) return null;\n                  \n                  return (\n                    <motion.div\n                      key={section.id}\n                      initial={{ opacity: 0, scale: 0.95, filter: 'blur(10px)' }}\n                      animate={{ opacity: 1, scale: 1, filter: 'blur(0px)' }}\n                      exit={{ opacity: 0, scale: 0.95, filter: 'blur(10px)' }}\n                      transition={{\n                        type: 'spring',\n                        stiffness: 300,\n                        damping: 25\n                      }}\n                      className=\"space-y-6\"\n                    >\n                      {/* Section Header */}\n                      <div className=\"flex items-center gap-4 mb-6\">\n                        <motion.div\n                          animate={{ rotate: [0, 5, -5, 0] }}\n                          transition={{ duration: 2, repeat: Infinity }}\n                          className=\"p-3 rounded-xl bg-gradient-to-br from-emerald-500/20 to-blue-500/20 border border-emerald-500/30\"\n                        >\n                          <section.icon className=\"w-6 h-6 text-emerald-400\" />\n                        </motion.div>\n                        <div>\n                          <h2 className=\"text-3xl font-bold bg-gradient-to-r from-white to-white/70 bg-clip-text text-transparent\">\n                            {section.title}\n                          </h2>\n                          <p className=\"text-white/60 mt-1\">{section.description}</p>\n                        </div>\n                      </div>\n\n                      {/* Component Demo */}\n                      <div className=\"space-y-6\">\n                        {section.component}\n                      </div>\n                    </motion.div>\n                  );\n                })}\n              </AnimatePresence>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <motion.footer\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 0.7 }}\n          className=\"mt-20 p-6 border-t border-white/10 backdrop-blur-xl bg-white/5\"\n        >\n          <div className=\"max-w-7xl mx-auto text-center\">\n            <p className=\"text-white/50 text-sm\">\n              Built with 💎 by{' '}\n              <span className=\"text-emerald-400 font-semibold\">Tulio Cunha</span>\n              {' '}using React, Framer Motion, and Liquid Glass principles\n            </p>\n          </div>\n        </motion.footer>\n      </div>\n    </div>\n  );\n}